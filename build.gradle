buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'net.linguica.gradle:maven-settings-plugin:0.5'
        classpath 'com.bmuschko:gradle-docker-plugin:3.2.2'
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'maven'
    id 'mavenenc'
    id 'maven-publish'
    id 'net.ltgt.apt' version '0.18'
    id 'org.sonarqube' version '2.6.1'
    id 'project-report'
}

description = 'spark-redshift'
group 'com.signifyd'
version '3.0.0'

def nexus_releases_url = 'https://nexus.signifyd.com/nexus/content/repositories/releases'
def nexus_snapshots_url = 'https://nexus.signifyd.com/nexus/content/repositories/snapshots'

repositories {
    maven { url "https://plugins.gradle.org/m2/" }
    maven {
            name = "signifyd-releases"
            url nexus_releases_url
            credentials {
                username "$nexusUsername"
                password "$nexusPassword"
            }
        }
        maven {
            name = "signifyd-snapshots"
            url nexus_snapshots_url
            credentials {
                username "$nexusUsername"
                password "$nexusPassword"
            }
        }
        maven {
            url = "https://nexus.signifyd.com/nexus/content/repositories/thirdparty"
            name = "signifyd-thirdparty"
            credentials {
                username "$nexusUsername"
                password "$nexusPassword"
            }
        }
        maven {
            name = "signifyd-public"
            url = "http://nexus.signifyd.com/nexus/content/groups/public/"
        }
        maven { url "https://nexus.signifyd.com/nexus/content/repositories/josha-authenticate-snapshots" }
        maven { url "https://nexus.signifyd.com/nexus/content/repositories/spray.io" }
        maven { url "https://nexus.signifyd.com/nexus/content/repositories/josha-easymail-snapshots" }
        maven { url "https://nexus.signifyd.com/nexus/content/repositories/bintray.com" }
        maven { url "https://nexus.signifyd.com/nexus/content/repositories/dynamodb/" }
        maven { url "http://repo.maven.apache.org/maven2" }
}

def scalaVersion = '2.11.7'
def sparkVersion = '2.4.0'
def hadoopVersion = '2.8.5'
def awsJavaSdkVersion = "1.10.22"

project.ext['libs'] = [
        'scala-library'       : "org.scala-lang:scala-library:${scalaVersion}",
        'scala-reflect'       : "org.scala-lang:scala-reflect:${scalaVersion}",
        'scala-java8-compat'  : 'org.scala-lang.modules:scala-java8-compat_2.11:0.8.0',
    ]

project.ext.build_date = new Date().format('yyyyMMddHHmmss')

apply plugin: 'scalaproject'

dependencies {
    compile 'com.eclipsesource.minimal-json:minimal-json:0.9.4'

    compileOnly "com.amazon.redshift:redshift-jdbc42-no-awssdk:1.2.10.1009"
    compileOnly "com.amazonaws:aws-java-sdk-core:${awsJavaSdkVersion}"
    compileOnly "com.amazonaws:aws-java-sdk-s3:${awsJavaSdkVersion}"
    compileOnly 'org.slf4j:slf4j-api:1.7.5'
    compileOnly "org.apache.spark:spark-core_2.11:${sparkVersion}"
    compileOnly "org.apache.spark:spark-hive_2.11:${sparkVersion}"
    compileOnly "org.apache.spark:spark-sql_2.11:${sparkVersion}"
    compileOnly "org.apache.spark:spark-avro_2.11:${sparkVersion}"
    compileOnly "org.apache.hadoop:hadoop-aws:${hadoopVersion}"
    compileOnly "org.apache.hadoop:hadoop-client:${hadoopVersion}"
    compileOnly "org.apache.hadoop:hadoop-common:${hadoopVersion}"

    testCompile "com.amazon.redshift:redshift-jdbc42-no-awssdk:1.2.10.1009"
    testCompile "com.amazonaws:aws-java-sdk-sts:${awsJavaSdkVersion}"
    testCompile 'com.google.guava:guava:14.0.1'
    testCompile 'org.slf4j:slf4j-api:1.7.5'
    testCompile "org.apache.spark:spark-core_2.11:${sparkVersion}"
    testCompile "org.apache.spark:spark-hive_2.11:${sparkVersion}"
    testCompile "org.apache.spark:spark-sql_2.11:${sparkVersion}"
    testCompile "org.apache.spark:spark-avro_2.11:${sparkVersion}"
    testCompile "org.apache.hadoop:hadoop-aws:${hadoopVersion}"
    testCompile "org.apache.hadoop:hadoop-client:${hadoopVersion}"
    testCompile "org.apache.hadoop:hadoop-common:${hadoopVersion}"
    testCompile 'org.scalatest:scalatest_2.11:2.2.1'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'postgresql:postgresql:8.3-606.jdbc4'
    testCompile 'junit:junit:4.12'
}

def defaultSnapshotVersion = project.ext.build_date + '-' + System.getenv('USER') + '-SNAPSHOT'
def snapshotVersion = project.hasProperty('snapshotVersion') ? "${project.snapshotVersion}" : defaultSnapshotVersion
def buildNumber = System.getenv("BUILD_NUMBER")
def publicationVersion = buildNumber != null && !buildNumber.isEmpty() ? 'CI-' + buildNumber : snapshotVersion

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "$groupId"
            artifactId = "$description"
            version = "$publicationVersion"

            from components.java
        }

    }

    repositories {
        maven {
            url = publicationVersion.endsWith('SNAPSHOT') ? nexus_snapshots_url : nexus_releases_url
            credentials {
                username "$nexusUsername"
                password "$nexusPassword"
            }
        }
    }
}


